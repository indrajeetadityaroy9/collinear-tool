version: '3.8'
services:

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    command: redis-server /usr/local/etc/redis/redis.conf


  api:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile
    image: collinear-tool-api
    command: /start-api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - ENABLE_REDIS_CACHE=True
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  celery-worker:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile
    image: collinear-tool-celery-worker
    command: /start-celeryworker
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WORKER_CONCURRENCY=10
      - LOG_LEVEL=INFO
      - CELERY_QUEUE=dataset_impacts
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: 2


  celery-scheduler:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile
    image: collinear-tool-celery-scheduler
    command: /start-celerybeat
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - MODE=scheduler
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis-data:
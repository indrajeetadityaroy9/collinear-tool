version: '3.8'

services:
  # Redis for caching and message broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # API server
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - ENABLE_REDIS_CACHE=True
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

  # Worker processes for background tasks
  worker1:
    build:
      context: .
      dockerfile: Dockerfile.worker
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WORKER_CONCURRENCY=5
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

  worker2:
    build:
      context: .
      dockerfile: Dockerfile.worker
    volumes:
      - .:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - WORKER_CONCURRENCY=5
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis-data: 